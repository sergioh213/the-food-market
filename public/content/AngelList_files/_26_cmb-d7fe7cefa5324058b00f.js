webpackJsonp([35],{858:function(t,e,n){var o=function(t,e){return function(){return t.apply(e,arguments)}},i=function(t,e){function n(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},r={}.hasOwnProperty,s=[].slice;t.exports=Promise.all([new Promise(function(t){t()}).then(n.bind(null,2)),new Promise(function(t){t()}).then(n.bind(null,106)),new Promise(function(t){t()}).then(n.bind(null,33)),n.e(64).then(n.bind(null,959)),n.e(1).then(n.bind(null,58)),new Promise(function(t){t()}).then(n.bind(null,52)),n.e(1236).then(n.bind(null,2333))]).then(function(){return function(t,e,n,r,a,p){var l,u,c,_;return u=p.classNames("coffeescripts/lib/transitional_autocomplete"),_=n.template("<div class='"+u.join(" ")+' list_item <%- typeof containing_class === \'undefined\' ? \'\' : containing_class %>\'>\n  <div class="g-lockup small container">\n    <% if (typeof(image) !== \'undefined\' && image) { %>\n    <div class="photo">\n      <img src="<%- image %>" alt="<%- main_text %>"/>\n    </div>\n    <% } %>\n    <div class="text">\n      <div class="main"><%= main_text %></div>\n      <% if (typeof(detail_text) !== \'undefined\' && detail_text) { %>\n      <div class=\'detail\'><%= detail_text %></div>\n      <% } %>\n    </div>\n  </div>\n</div>'),c=function(t){return n.template("<div class='"+u.join(" ")+" add_item'>"+t+" <span class='matched_substring'><%- '\"' + term + '\"'%></span></div>")},l=function(e){function r(){return this.open=o(this.open,this),this.select=o(this.select,this),this.source=o(this.source,this),this.update_model=o(this.update_model,this),r.__super__.constructor.apply(this,arguments)}return i(r,e),r.prototype.request_options=function(t){throw new Error("Subclasses must override")},r.prototype.render_item=function(t,e){throw new Error("Subclasses must override")},r.prototype.update_model=function(t){var e,n;return"function"==typeof(null!=(e=this.model)?e.set_autocomplete_data:void 0)&&this.model.set_autocomplete_data(t),null!=(n=this.model)?n.trigger("autocomplete",t,this):void 0},r.prototype.initialize=function(t){return this.options=t},r.prototype.search=function(){return this.$el.autocomplete("search")},r.prototype.events=function(){return{click:"search"}},r.prototype.autocomplete_options=function(){return{autoFocus:!0,html:!0,delay:a.isDevelopment()?300:50,source:this.source,select:this.select,open:this.open,focus:this.focus}},r.prototype.widget_class=function(){return u.join(" ")+" container"},r.prototype.source=function(e,n){var o,i,r,a;return i=this.request_options(e.term),a=this,o=t.extend({},i,{success:function(){var t,o,r;if(t=1<=arguments.length?s.call(arguments,0):[],null!=(o=i.success)&&o.apply(this,t),r=t[2],a.$el.is(":focus")&&a.__last_xhr===r&&a.$el.val()===e.term)return n(a.process_response(t[0],e.term))}}),null!=(r=this.__last_xhr)&&r.abort(),this.__last_xhr=t.ajax(o)},r.prototype.focus=function(){return!1},r.prototype.select=function(t,e){return this.update_model(e.item.value),this.trigger("select",e.item.value,this,t),!1},r.prototype.open=function(t,e){return this.$el.autocomplete("widget").find(".ui-menu-item").attr("aria-label"," "),this.trigger("open",this,t,e)},r.prototype.process_response=function(t,e){var n;return function(){var o,i,r;for(r=[],o=0,i=t.length;o<i;o++)n=t[o],r.push(function(t){return function(n){return{value:n,label:t.render_item(n,e)}}}(this)(n));return r}.call(this)},r.prototype.delegateEvents=function(e){return r.__super__.delegateEvents.call(this,e),this.$el.autocomplete(this.autocomplete_options()),this.__autocomplete_initialized=!0,t(this.$el.autocomplete("widget")).addClass(this.widget_class())},r.prototype.undelegateEvents=function(t){return r.__super__.undelegateEvents.call(this,t),this.__autocomplete_initialized&&this.$el.autocomplete("destroy"),this.__autocomplete_initialized=!1},r.prototype.highlighted_text=function(e,o){var i,r,s,a,p;for(e=n.escape(e),p=[o=o.trim().toLowerCase()].concat(o.split(/\s+/)).concat(o.replace(/[^a-z0-9\ ]/,"").split(/\s+/)),i=0,r=(p=n.uniq(p.sort().reverse())).length;i<r;i++)""!==(a=p[i])&&(s=new RegExp("\\b("+t.ui.autocomplete(a)+")(?![^<]*?>)","gi"),e=e.replace(s,"<span class='matched_substring'>$1</span>"));return e},r}(e.View),{BaseAutocomplete:l,render_item:_,SearchAutocomplete:function(t){function e(){return this.select=o(this.select,this),e.__super__.constructor.apply(this,arguments)}return i(e,l),e.prototype.request_options=function(t){return{url:"/autocomplete/search",data:{query:t},dataType:"json",type:"get"}},e.prototype.select=function(t,n){return e.__super__.select.call(this,t,n),window.location=n.item.value.url,!1},e.prototype.more_template=function(t){return this._more_template||(this._more_template=c("Search for ")),this._more_template({term:t})},e.prototype.process_response=function(t,n){var o;return(o=e.__super__.process_response.call(this,t.results,n)).push({label:this.more_template(n),value:{url:"/search?q="+n}}),o},e.prototype.render_item=function(t,e){return _({image:null!=t.pic&&t.pic.length>0?t.pic:null,main_text:this.highlighted_text(t.name,e),detail_text:t.type,containing_class:"search"})},e}(),TypedAutocomplete:function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return i(e,l),e.prototype.more_template=function(t){return this._more_template||(this._more_template=c("Add new ")),this._more_template({term:t})},e.prototype.request_options=function(t){return{url:"/autocomplete/search",data:{query:t,types:this.options.types,include_exact_match:this.options.include_exact_match,limit:this.options.limit,contain_ids:this.options.contain_ids},dataType:"json",type:"get"}},e.prototype.process_response=function(t,n){var o;return o=e.__super__.process_response.call(this,t.results,n),this.options.canSelectUnmatchedQuery&&o.push({label:this.more_template(n),value:{unmatched:!0,query:n}}),o},e.prototype.render_item=function(t,e){return _({image:null!=t.pic&&t.pic.length>0?t.pic:null,main_text:this.highlighted_text(t.name,e),detail_text:t.type,containing_class:"search"})},e}(),PeopleAndTagsAutocomplete:function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return i(e,l),e.prototype.request_options=function(t){return{url:"/autocomplete/people_and_tags",data:{query:t,tag_types:this.options.tag_types},dataType:"json",type:"get"}},e.prototype.widget_class=function(){return e.__super__.widget_class.call(this)+" search"},e.prototype.render_item=function(t,e){return _({image:null!=t.pic&&t.pic.length>0?t.pic:null,main_text:this.highlighted_text(t.name,e),detail_text:t.type,containing_class:"search"})},e}(),TagAutocomplete:function(e){function n(){return n.__super__.constructor.apply(this,arguments)}return i(n,l),n.prototype.request_options=function(t){return{url:"/autocomplete/new_tags",data:this.request_data(t),dataType:"json",type:"get"}},n.prototype.render_item=function(t,e){return _({image:null!=t.tag.pic&&t.tag.pic.length>0?t.tag.pic:null,main_text:this.main_text(t,e),detail_text:this.options.hide_detail_text?void 0:this.detail_text(t,e)})},n.prototype.request_data=function(e){var n,o;if(n={query:e},"function"==typeof(null!=(o=this.model)?o.autocomplete_parameters:void 0)&&t.extend(n,this.model.autocomplete_parameters()),null!=this.options.tag_type&&t.extend(n,{tag_type:this.options.tag_type}),null!=this.options.parameters&&t.extend(n,this.options.parameters),null==n.tag_type)throw new Error("Must provide a tag type. This can either come from the model, or be provided as an explicit tag_type parameter");return n},n.prototype.main_text=function(t,e){return this.highlighted_text(t.tag.display_name,e)},n.prototype.detail_text=function(t,e){return null!=t.tag.description?t.tag.description:null!=t.counts.User?1===t.counts.User?"1 follower":t.counts.User+" followers":null},n}(),more_template:c}}.apply(void 0,arguments[0])}.bind(this))}});