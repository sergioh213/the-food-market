webpackJsonp([64],{959:function(e,t,n){var r={}.hasOwnProperty;e.exports=Promise.all([n.e(29).then(n.bind(null,857)),n.e(67).then(n.bind(null,990)),n.e(121).then(n.bind(null,1185))]).then(function(){return function(e,t,n){return function(a){function i(){return i.__super__.constructor.apply(this,arguments)}return function(e,t){function n(){this.constructor=e}for(var a in t)r.call(t,a)&&(e[a]=t[a]);n.prototype=t.prototype,e.prototype=new n,e.__super__=t.prototype}(i,e("NewTagging")),i.prototype.sync=function(e,t,r){var a;if("tags_colleges"!==t.get("new_taggable_field"))return i.__super__.sync.call(this,e,t,r);switch(e){case"delete":return r||(r={}),r.url="/degrees/"+t.id,r.contentType="application/json",i.__super__.sync.call(this,e,t,r);case"create":return r||(r={}),r.url="/degrees",r.contentType="application/json",a=new n({user_id:t.get("new_taggable_id"),new_tag_id:t.get("new_tag").id}),r.data=JSON.stringify({degree:a.toJSON()}),i.__super__.sync.call(this,"create",t,r);default:throw new Error("Degrees can only be created and deleted via NewTagging logic")}},i.prototype.autocomplete=function(e,n){return new t(e,{selectCallback:function(t){return function(n){return e.val(n.item.display_name),t.set("new_tag_id",n.id),t.trigger("autocomplete")}}(this),queryOptions:{new_taggable_field:this.get("new_taggable_field"),new_taggable_type:this.get("new_taggable_type"),tag_type:n},tags:!0})},i}()}.apply(void 0,arguments[0])}.bind(this))}});